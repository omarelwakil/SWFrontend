name: CI

on:
  push:
    branches: [ main ]
  
  pull_request:
    branches: [ main ]

jobs:
  unit_testing:
    name: Unit testing
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup testing environment
      run: make setup_unit_test_env

    - name: Run tests
      run: make run_unit_tests

  build:
    name: Build
    runs-on: ubuntu-18.04
    needs: unit_testing
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Docker build image
      run: docker build -t flickr-frontend .
    
    - name: Docker save image
      run: docker save flickr-frontend > /tmp/flickr-frontend.tar

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: flickr-frontend-image
        path: /tmp/flickr-frontend.tar
  
  e2e_testing:
    name: Integration testing
    runs-on: ubuntu-18.04
    needs: build
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: flickr-frontend-image
        path: /tmp

    - name: Load Docker image
      run: docker load --input /tmp/flickr-frontend.tar
        
    - name: GHCR login
      run: echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin

    - name: Setup testing environment
      run: make setup_e2e_test_env

    - name: Run tests
      run: make run_e2e_tests

  publish:
    name: Publish image
    runs-on: ubuntu-18.04
    needs: e2e_testing
    steps:
    - name: Inject variables
      uses: rlespinasse/github-slug-action@v3.x

    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: flickr-frontend-image
        path: /tmp

    - name: Load Docker image
      run: docker load --input /tmp/flickr-frontend.tar

    - name: Docker tag images
      run: |
        docker tag flickr-frontend ghcr.io/${{secrets.GHCR_USERNAME}}/swfrontend:latest
        docker tag flickr-frontend ghcr.io/${{secrets.GHCR_USERNAME}}/swfrontend:${{env.GITHUB_SHA_SHORT}}
      
    - name: Docker push images
      run: |
        echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin
        docker push ghcr.io/${{secrets.GHCR_USERNAME}}/swfrontend:latest
        docker push ghcr.io/${{secrets.GHCR_USERNAME}}/swfrontend:${{env.GITHUB_SHA_SHORT}}

  deploy:
    name: Deploy  
    runs-on: ubuntu-18.04
    needs: publish
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/prod.key
          chmod 600 ~/.ssh/prod.key
          cat >>~/.ssh/config <<END
          Host prod
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/prod.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.PRODUCTION_SSH_USER }}
          SSH_KEY: ${{ secrets.PRODUCTION_SSH_KEY }}
          SSH_HOST: ${{ secrets.PRODUCTION_SSH_HOST }}  

      - name: Deploy to the server
        run: ssh prod '~/scripts/deploy.sh'